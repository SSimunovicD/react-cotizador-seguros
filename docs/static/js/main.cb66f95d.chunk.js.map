{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primeraMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.cb66f95d.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContenedorHeader = styled.header`\r\n    background-color: #26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    font-family: 'Slabo 27px', serif;\r\n    text-align: center;\r\n`;\r\n\r\nexport const Header = ({titulo}) => {\r\n    return (\r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n               \r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}","// Obtiene la diferencia de años\r\n\r\nexport function obtenerDiferenciaYear(year) {\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\n// Calcula el total a pagar según la marca\r\nexport function calcularMarca(marca) {\r\n    let incremento;\r\n\r\n    switch (marca) {\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return incremento;\r\n}\r\n\r\n// Calcula el tipo de seguro\r\nexport function obtenerPlan(plan) {\r\n    return (plan === 'basico') ? 1.20 : 1.50;\r\n}\r\n\r\n// Muestra la primera letra mayuscula\r\nexport function primeraMayuscula( texto) {\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}","import React, { useState } from 'react'\r\nimport styled from '@emotion/styled';\r\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from '../helper';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Campo = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid #e1e1e1;\r\n    -webkit-appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n    background-color: #00838F;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    border: none;\r\n    transition: background-color .3s ease;\r\n    margin-top: 2rem;\r\n\r\n    &:hover {\r\n        background-color: #26c6da;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n    background-color: red;\r\n    color: white;\r\n    padding:1rem;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\n\r\nexport const Formulario = ({ guardarResumen, guardarCargando }) => {\r\n\r\n    const [datos, guardarDatos] = useState({\r\n        marca: '',\r\n        year: '',\r\n        plan: ''\r\n    });\r\n\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // Extraer los valores del state\r\n    const { marca, year, plan } = datos;\r\n\r\n    // Leer los datos del formulario y colocarlos en el state\r\n    const obtenerInformacion = e => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    // Cuando el usuario presiona submit\r\n    const cotizarSeguro = e => {\r\n        e.preventDefault();\r\n\r\n        if (marca.trim() === '' || year.trim() === '' || plan.trim() === '') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        guardarError(false);\r\n\r\n        // una base de 2000\r\n        let resultado = 2000;\r\n\r\n        // obtener la diferencia de años\r\n        const diferencia = obtenerDiferenciaYear(year);\r\n\r\n        // por cada año hay que restar el 3%\r\n        resultado -= ((diferencia * 3) * resultado) / 100;\r\n\r\n        // Americano 15\r\n        // Asiatico 5%\r\n        // Europeo 30%\r\n        resultado = calcularMarca(marca) * resultado;\r\n\r\n        // Básico aumenta 20%\r\n        // Completo 50%\r\n        const incrementoPlan = obtenerPlan(plan);\r\n        resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\r\n\r\n        guardarCargando(true);\r\n\r\n        setTimeout(() => {\r\n            // Elimina el Spinner\r\n            guardarCargando(false);\r\n            // Pasa la información al componente principal\r\n            guardarResumen({\r\n                cotizacion: Number(resultado),\r\n                datos\r\n            });\r\n        }, 2000);\r\n\r\n\r\n\r\n        // Total\r\n\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={cotizarSeguro}\r\n        >\r\n\r\n            {error ? <Error>Todos los campos son obligatorios</Error> : null}\r\n\r\n            <Campo>\r\n                <Label>Marca</Label>\r\n                <Select\r\n                    name=\"marca\"\r\n                    value={marca}\r\n                    onChange={obtenerInformacion}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"americano\">Americano</option>\r\n                    <option value=\"europeo\">Europeo</option>\r\n                    <option value=\"asiatico\">Asiático</option>\r\n                </Select>\r\n            </Campo>\r\n\r\n            <Campo>\r\n                <Label>Año</Label>\r\n                <Select\r\n                    name=\"year\"\r\n                    value={year}\r\n                    onChange={obtenerInformacion}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option>\r\n                </Select>\r\n            </Campo>\r\n\r\n            <Campo>\r\n                <Label>Plan</Label>\r\n                <InputRadio\r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"basico\"\r\n                    checked={plan === \"basico\"}\r\n                    onChange={obtenerInformacion}\r\n                /> Básico\r\n\r\n                <InputRadio\r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"completo\"\r\n                    checked={plan === \"completo\"}\r\n                    onChange={obtenerInformacion}\r\n                /> Completo\r\n\r\n\r\n            </Campo>\r\n\r\n            <Boton type=\"submit\">Cotizar</Boton>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarResumen: PropTypes.func.isRequired,\r\n    guardarCargando: PropTypes.func.isRequired\r\n}","import React  from 'react'\r\nimport styled from '@emotion/styled';\r\nimport {primeraMayuscula} from '../helper';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838f;\r\n    color: #FFF;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nexport const Resumen = ({datos}) => {\r\n\r\n    // extraer datos\r\n    const {marca, year, plan} = datos;\r\n\r\n    if(marca === '' || year === '' || plan === '') return null;\r\n\r\n\r\n    return (\r\n        <ContenedorResumen>\r\n           <h2>Resumen de Cotización</h2> \r\n           <ul>\r\n               <li>Marca: {primeraMayuscula(marca)} </li>\r\n               <li>Plan: {primeraMayuscula(plan)} </li>\r\n               <li>Año del Auto: {year} </li>\r\n           </ul>\r\n        </ContenedorResumen>\r\n        \r\n    );\r\n}\r\n \r\nResumen.propTypes = {\r\n    datos: PropTypes.object.isRequired\r\n}","import React from 'react'\r\nimport styled from '@emotion/styled';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Mensaje = styled.p`\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n    text-align: center;\r\n    padding: .5rem;\r\n    border: 1px solid #26c6da;\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 1rem;\r\n    position: relative;\r\n`;\r\n\r\nconst TextoCotizacion = styled.p`\r\n    color: #00838F;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    margin: 0;\r\n`;\r\n\r\n\r\nexport const Resultado = ({ cotizacion }) => {\r\n\r\n    return (\r\n        (cotizacion === 0)\r\n            ? <Mensaje>Elige marca, año y tipo de seguro</Mensaje>\r\n            :\r\n            (\r\n                <ResultadoCotizacion>\r\n                    <TransitionGroup\r\n                        component=\"span\"\r\n                        className=\"resultado\"\r\n                    >\r\n                        <CSSTransition\r\n                            classNames=\"resultado\"\r\n                            key={cotizacion}\r\n                            timeout={{ enter: 500, exit: 500 }}\r\n                        >\r\n                            <TextoCotizacion>El total es $ <span>{cotizacion} </span> </TextoCotizacion>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                </ResultadoCotizacion>\r\n            )\r\n    )\r\n}\r\n\r\nResultado.propTypes = {\r\n    cotizacion: PropTypes.number.isRequired\r\n}","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nexport const Spinner = () => {\r\n    return (\r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport { Header } from './components/Header';\n\nimport styled from '@emotion/styled';\nimport { Formulario } from './components/Formulario';\nimport { Resumen } from './components/Resumen';\nimport { Resultado } from './components/Resultado';\nimport { Spinner } from './components/Spinner';\n\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #FFF;\n  padding: 3rem;\n`;\n\nfunction App() {\n\n  const [resumen, guardarResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  const [cargando, guardarCargando] = useState(false);\n\n  // Extraer datos\n  const { cotizacion, datos } = resumen;\n\n  return (\n\n    <Contenedor>\n\n      <Header\n        titulo='Cotizador de Seguros'\n      />\n\n      <ContenedorFormulario>\n        <Formulario\n          guardarResumen={guardarResumen}\n          guardarCargando={guardarCargando}\n        />\n\n        {cargando ? <Spinner /> : null}\n\n        <Resumen\n          datos={datos}\n        />\n\n        {!cargando\n          ? <Resultado\n            cotizacion={cotizacion}\n          />\n\n          : null\n\n        }\n\n\n      </ContenedorFormulario>\n\n\n    </Contenedor>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n    <App />,\n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}